digraph graph_name {
  graph [
    charset = "UTF-8";
    label = "sample graph",
    labelloc = "t",
    labeljust = "c",
    bgcolor = "#ffffff",
    fontcolor = white,
    fontsize = 18,
    style = "filled",
    rankdir = TB,
    margin = 0.2,
    splines = spline,
    ranksep = 1.0,
    nodesep = 0.9,
    //layout = dot
    layout = fdp
  ];

  node [
    colorscheme = "rdylgn11"
    style = "solid,filled",
    shape = box,
    fontsize = 16,
    fontcolor = black,
    fontname = "Migu 1M",
    color = black,
    fillcolor = white,
  ];

  edge [
    style = solid,
    color = black,
    labelfloat = true,
    labeldistance = 2.5,
    labelangle = 70
  ];


  // edge define
  "ニューラルネットワーク";
  "解析学"
  "線形代数";
  "グラフ理論";
  "確率";
  "代数学";
  "アルゴリズム";


  "解析学" -> "連鎖律の証明";

  "連鎖律の証明" -> "微分可能性の定義";

  "解析学" -> "ディラックのデルタ関数の定義";

  "解析学" -> "リーマン積分の定義";

  "ディラックのデルタ関数の定義" -> "リーマン積分の定義";

  "リーマン積分の定義" -> "上積分の定義";
  "リーマン積分の定義" -> "下積分の定義";
  "確率" -> "マルコフ過程";
  "確率" -> "Poisson 分布";
  "ベイズ最適化" -> "ガウス過程回帰";

  "確率"           -> "ガウス過程";
  "ガウス過程回帰" -> "ガウス過程";

  "グラフ理論" -> "隣接行列の収束性";
  "線形代数"   -> "隣接行列の収束性";

  "線形代数" -> "Jordan normal form の存在証明";

  "マルコフ連鎖" -> "定常状態の一意性";
  "線形代数"     -> "定常状態の一意性";

  "定常状態の一意性" -> "確率行列の収束性";

  "アルゴリズム" -> "中国剰余定理の復元";

  "代数学"             -> "中国剰余定理の証明";
  "中国剰余定理の復元" -> "中国剰余定理の証明";

  "ニューラルネットワーク" -> "Hodgkin Huxley方程式";

  "ニューラルネットワーク" -> "確率的勾配降下法の正当性";
  "アルゴリズム"           -> "確率的勾配降下法の正当性";

  "ニューラルネットワーク" -> "実数値から Poisson 確率を使ってスパイク列を生成する方法";
  "Poisson 分布"           -> "実数値から Poisson 確率を使ってスパイク列を生成する方法";

  "ニューラルネットワーク" -> "次元が高まることで線形分離性が上がるのはなぜ";

  "ニューラルネットワーク" -> "ベイズ最適化";

  "アルゴリズム" -> "フィッシャーの乱択アルゴリズム";

  "アルゴリズム" -> "カハンの加算アルゴリズム";


  "単調増加の定義";
  "指数関数の定義";

  "単調増加の定義";
  "指数関数の定義";
}

